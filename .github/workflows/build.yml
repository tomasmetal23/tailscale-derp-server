name: Build & publish multi-arch (amd64 + arm64) DERP image

on:
  push:
    paths: ['Dockerfile']
  workflow_dispatch:

permissions:
  contents: read
  packages: write      # subir a GHCR

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3        # emulación arm64
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ─── build temporal solo amd64 para extraer versión ───
      - name: Build amd64 (local load)
        run: |
          docker buildx build \
            --platform linux/amd64 \
            -t derp-temp:${{ github.sha }} \
            --load .

      - name: Get derper version
        id: ver
        run: |
          v=$(docker run --rm derp-temp:${{ github.sha }} -version | awk '{print $2}')
          echo "tag=$v" >> $GITHUB_OUTPUT

      # ─── build & push multiplataforma ───
      - name: Build & push multi-arch
        run: |
          IMG=ghcr.io/${{ github.repository_owner }}/derper
          TAG=${{ steps.ver.outputs.tag }}
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t ${IMG}:${TAG} \
            -t ${IMG}:latest \
            --push .

      - name: Clean temp image
        run: docker rmi derp-temp:${{ github.sha }} || true